#!/bin/bash

#Paraphraser's IOTstack backup script - modified by liamhogan
#UPDATETAG = 20201107-1323

# either use an optional argument or default to a datestamp
RUNTAG=${1:-$(date +"%Y-%m-%d_%H%M")}

# IOTstack lives here
IOTSTACK="$HOME/IOTstack"

# the backup directory is
BACKUPDIR="$IOTSTACK/backups"

# ensure the backup directory exists
[ -d "$BACKUPDIR" ] || mkdir "$BACKUPDIR"

# the log we will be writing to is
LOGNAME="backup-log"
LOGFILE="$RUNTAG.$LOGNAME.txt"
LOGPATH="$BACKUPDIR/$LOGFILE"

# ensure that the log exists
touch "$LOGPATH"

# redirect stdout and stderr to it
exec >> "$LOGPATH"
exec 2>> "$LOGPATH"

# now we can begin
echo "----- Starting backup at $(date) -----"

pushd "$IOTSTACK"

INFLUXBACKUPNAME="influx-backup"
INFLUXBACKUPFILE="$RUNTAG.$INFLUXBACKUPNAME.tar"
INFLUXBACKUPPATH="$BACKUPDIR/$INFLUXBACKUPFILE"
INFLUXBACKUPROOT="$BACKUPDIR/influxdb"
INFLUXBACKUPOLD="$INFLUXBACKUPROOT/db_old"
INFLUXBACKUPNEW="$INFLUXBACKUPROOT/db"

GENERALBACKUPNAME="general-backup"
GENERALBACKUPFILE="$RUNTAG.$GENERALBACKUPNAME.tar.gz"
GENERALBACKUPPATH="$BACKUPDIR/$GENERALBACKUPFILE"


# is Influx running?
if [ $(docker ps | grep -c influxdb) -gt 0 ]; then

	# prepare the environment
	echo "Moving old influxdb backups if they exist"
	[ -d "$INFLUXBACKUPOLD" ] || sudo mkdir "$INFLUXBACKUPOLD"
	pushd "$INFLUXBACKUPOLD"; sudo rm *; popd
	pushd "$INFLUXBACKUPNEW"; sudo mv * "$INFLUXBACKUPOLD"; popd

	# execute the backup command
	echo "backing up Influx database"
	docker exec influxdb influxd backup -portable /var/lib/influxdb/backup
	echo "influxdb backup complete"

	# sweep the backup into a tar
	echo "Sweeping $INFLUXBACKUPNEW into $INFLUXBACKUPPATH"
	pushd "$INFLUXBACKUPNEW"
	sudo tar -cf "$INFLUXBACKUPPATH" .
	popd

fi

# create the list of files to backup
backuplist="$(mktemp -p /dev/shm/)"
echo "./docker-compose.yml" >$backuplist
echo "./services/" >>$backuplist
echo "./volumes/" >>$backuplist

# compress the backups folders to archive
echo "compressing stack folders - except influx and nextcloud"
sudo tar -czf \
	"$GENERALBACKUPPATH" \
	--exclude=./volumes/influxdb/* \
	--exclude=./volumes/nextcloud/* \
	-T $backuplist

rm $backuplist

# move into the backup directory
pushd "$BACKUPDIR"

# was a general backup file created?
if [ -e "$GENERALBACKUPFILE" ] ; then

	# set ownership
	sudo chown pi:pi "$GENERALBACKUPFILE"

	# report size of archive
	du -h "$GENERALBACKUPFILE"

	# cleanup
  echo "deleting general backups older than 7 days"
	ls -t1 *.$GENERALBACKUPNAME.* | tail -n +8 | xargs rm -f

fi

# was an influx backup file created?
if [ -e "$INFLUXBACKUPFILE" ] ; then

	# set ownership
	sudo chown pi:pi "$INFLUXBACKUPFILE"

	# report size of archive
	du -h "$INFLUXBACKUPFILE"

	# cleanup
  echo "deleting influx backups older than 7 days"
	ls -t1 *.$INFLUXBACKUPNAME.* | tail -n +8 | xargs rm -f

fi

# Google drive backup
echo "syncing backup folder to Google Drive"
# sync local backup folder to gdrive (older gdrive copies will be deleted to match)
rclone sync $BACKUPDIR --filter-from $BACKUPDIR/rcfilter  gdrive:/Backups/IOTstack/
echo "sync with Google Drive complete"


# cleanup logs
echo "deleting old logs"
ls -t1 *.$LOGNAME.* | tail -n +8 | xargs rm -f

# pop out of the backup directory
popd

# pop out of IOTstack
popd

echo "Backup process complete!"
